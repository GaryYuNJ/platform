buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
        springDependencyManagementPluginVersion = '0.6.1.RELEASE'
    }

    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public"
        }
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementPluginVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public"
        }
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    ext {
        springBootVersion = '1.4.2.RELEASE'

        assertjVersion = '3.4.1'
        sitemeshVersion = '3.0.1'
        guavaVersion = '20.0'
        shiroVersion = '1.4.0-RC2'
        druidVersion = '1.0.27'
        okHttpVersion = '3.5.0'
        mybatisVersion = '3.4.1'
        mybatisSpringVersion = '1.3.0'
        mybatisSpringBootVersion = '1.1.1'
        mybatisGeneratorVersion = '1.3.5'

        commonsIoVersion = '2.5'
        commonsLangVersion = '3.5'
        commonsCodecVersion = '1.10'
        commonsFileuploadVersion = '1.3.2'
        commonsBeanutilsVersion = '1.9.3'
        commonsCollectionsVersion = '3.2.2'

        javaxJstlApiVersion = '1.2'
        javaxServletApiVersion = '3.1.0'
        javaxJspApiVersion = '2.3.0'
    }

    // 覆盖spring-boot-dependencies的版本定义,保持最新版本
    ext['spring.version'] = '4.3.4.RELEASE'
    ext['spring-session.version'] = '1.2.2.RELEASE'
    ext['spring-security.version'] = '4.2.0.RELEASE'
    ext['spring-data-releasetrain.version'] = 'Hopper-SR5'
    ext['hibernate-validator.version'] = "5.3.4.Final"
    ext['mysql.version'] = '5.1.40'
    ext['slf4j.version'] = '1.7.21'
    ext['log4j2.version'] = '2.7'
    ext['jackson.version'] = '2.8.4'
    ext['jedis.version'] = '2.9.0'
    ext['jersey.version'] = '2.24.1'
    ext['ehcache.version'] = '2.10.3'
    ext['joda-time.version'] = '2.9.6'
    ext['javassist.version'] = '3.21.0-GA'
    // server
    ext['tomcat.version'] = '8.5.8'
    ext['jetty.version'] = '9.3.14.v20161028'
    // 覆盖spring-boot-dependencies的版本定义,保持最新版本

    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        }
    }

    apply plugin: "idea"
    apply plugin: "java"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    configurations {
        compile.exclude group: 'org.apache.geronimo.specs'
        compile.exclude module: 'commons-logging'
        compile.exclude module: 'xml-apis'
        compile.exclude module: 'h2'
        compile.exclude module: 'spring-boot-starter-logging'
        compile.exclude module: 'spring-boot-starter-tomcat'
        compile.exclude module: 'hibernate-entitymanager'
        compile.exclude module: 'ehcache-core'
    }

    defaultTasks = ['clean', 'build']
}

project("webapp") {
    description = "Platform"
    version = "0.0.1"

    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'application'

    mainClassName = "cn.elvea.Initializer"

    springBoot {
        applyExcludeRules = false
    }

    configurations {
        providedRuntime
    }

    dependencies {
        // Spring Boot & Spring Session
        compile("org.springframework.boot:spring-boot-starter-jdbc")
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-log4j2")
        compile("org.springframework.boot:spring-boot-starter-data-redis")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.session:spring-session")

        // Apache Commons
        compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
        compile("commons-fileupload:commons-fileupload:${commonsFileuploadVersion}")
        compile("commons-io:commons-io:${commonsIoVersion}")
        compile("commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}")
        compile("commons-codec:commons-codec:${commonsCodecVersion}")

        // Database & DataSource
        compile("mysql:mysql-connector-java")
        compile("redis.clients:jedis")
        compile("com.alibaba:druid:${druidVersion}")

        // 3rd party
        compile("com.fasterxml.jackson.core:jackson-core")
        compile("com.fasterxml.jackson.core:jackson-annotations")
        compile("com.fasterxml.jackson.core:jackson-databind")
        compile("net.sf.ehcache:ehcache")
        compile("joda-time:joda-time")
        compile("com.squareup.okhttp3:okhttp:${okHttpVersion}")
        compile("org.sitemesh:sitemesh:${sitemeshVersion}")
        compile("com.google.guava:guava:${guavaVersion}")

        // Shrio
        compile("org.apache.shiro:shiro-spring:${shiroVersion}")
        compile("org.apache.shiro:shiro-web:${shiroVersion}")

        // MyBatis
        compile("org.mybatis:mybatis:${mybatisVersion}")
        compile("org.mybatis:mybatis-spring:${mybatisSpringVersion}")
        compile("org.mybatis.generator:mybatis-generator-core:${mybatisGeneratorVersion}")

        // javax
        compile("javax.servlet:jstl:${javaxJstlApiVersion}")
        providedCompile("javax.servlet:javax.servlet-api:${javaxServletApiVersion}")
        providedCompile("javax.servlet.jsp:javax.servlet.jsp-api:${javaxJspApiVersion}")

        // tomcat
        // providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
        // providedRuntime("org.apache.tomcat.embed:tomcat-embed-jasper")
        // jetty
        compile('org.springframework.boot:spring-boot-starter-jetty')

        // test
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}
