buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:0.5.7.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}

allprojects {
    group = "cn.elvea"

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    ext {
        tomcatVersion = "8.0.35"

        assertjVersion = "3.4.1"
        mockitoVersion = "1.10.19"

        springVersion = "4.3.0.RELEASE"
        springBootVersion = "1.3.5.RELEASE"
        springDataVersion = "Hopper-SR1"
        springSecurityVersion = "4.1.0.RELEASE"
        springSessionVersion = "1.2.0.RELEASE"

        sitemeshVersion = "3.0.1"
        guavaVersion = "19.0"
        jodatimeVersion = "2.9.4"
        ehcacheVersion = "2.10.2"
        mysqlVersion = "5.1.39"
        jedisVersion = "2.8.1"
        shiroVersion = "1.2.5"
        druidVersion = "1.0.20"
        mybatisVersion = "3.4.0"
        mybatisSpringVersion = "1.3.0"
        mybatisSpringBootVersion = "1.1.1"
        okHttpVersion = "3.3.1"

        javaxJtaVersion = "1.2"
        javaxJstlApiVersion = "1.2"
        javaxServletApiVersion = "3.1.0"
        javaxJspApiVersion = "2.3.0"

        commonsIoVersion = "2.4"
        commonsLangVersion = "3.4"
        commonsCodecVersion = "1.9"
        commonsFileuploadVersion = "1.3.2"
        commonsBeanutilsVersion = "1.9.2"
        commonsCollectionsVersion = "3.2.1"
    }

    apply plugin: 'groovy'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
            mavenBom("org.springframework:spring-framework-bom:${springVersion}")
            mavenBom("org.springframework.security:spring-security-bom:${springSecurityVersion}")
            mavenBom("org.springframework.data:spring-data-releasetrain:${springDataVersion}")
        }
    }
    apply plugin: "idea"
    apply plugin: "java"

    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/main/")
        }
    }

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    configurations {
        compile.exclude group: 'org.apache.geronimo.specs'
        compile.exclude module: 'commons-logging'
        compile.exclude module: 'xml-apis'
        compile.exclude module: 'h2'
    }

    defaultTasks = ['clean', 'build']
}

project("core") {
    description = "Platform Core"
    version = "0.0.1"

    dependencies {
        compile("org.slf4j:slf4j-api")
        compile("org.springframework:spring-jdbc")
        compile("org.springframework:spring-orm")
        compile("org.springframework:spring-webmvc")
        compile("org.springframework.data:spring-data-jpa")
        compile("org.hibernate:hibernate-core")
        compile("javax.servlet:javax.servlet-api:${javaxServletApiVersion}")
        compile("mysql:mysql-connector-java:${mysqlVersion}")
        compile("javax.transaction:javax.transaction-api:${javaxJtaVersion}")
        compile("com.google.guava:guava:${guavaVersion}")
        compile("org.mybatis:mybatis:${mybatisVersion}")
        compile("org.mybatis:mybatis-spring:${mybatisSpringVersion}")
        compile("org.apache.shiro:shiro-web:${shiroVersion}")
        compile("org.apache.shiro:shiro-spring:${shiroVersion}")
        compile("com.squareup.okhttp3:okhttp:${okHttpVersion}")
        compile("com.fasterxml.jackson.core:jackson-core")
        compile("com.fasterxml.jackson.core:jackson-annotations")
        compile("com.fasterxml.jackson.core:jackson-databind")

        // commons
        compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
        compile("commons-fileupload:commons-fileupload:${commonsFileuploadVersion}")
        compile("commons-io:commons-io:${commonsIoVersion}")
        compile("commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}")
        compile("commons-codec:commons-codec:${commonsCodecVersion}")

        // test
        testCompile("org.springframework:spring-test")
        testCompile("junit:junit")
        testCompile("org.assertj:assertj-core:${assertjVersion}")
        testCompile("org.mockito:mockito-core:${mockitoVersion}")
        testCompile("org.slf4j:jcl-over-slf4j")
        testCompile("org.apache.logging.log4j:log4j-slf4j-impl")
        testCompile("org.apache.logging.log4j:log4j-core")
    }
}

project("webapp") {
    description = "Platform Webapp"
    version = "0.0.1"

    apply plugin: 'spring-boot'
    apply plugin: "war"

    springBoot {
        applyExcludeRules = false
    }

    configurations {
        providedRuntime

        compile.exclude module: 'spring-boot-starter-logging'
        compile.exclude module: 'spring-boot-starter-tomcat'
        compile.exclude module: 'hibernate-entitymanager'
    }

    dependencies {
        compile(project(":core"))

        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-log4j2")
        compile("org.springframework.boot:spring-boot-starter-redis")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile("org.springframework.boot:spring-boot-starter-data-jpa")
        compile("org.springframework.session:spring-session:${springSessionVersion}")

        // commons
        compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
        compile("commons-fileupload:commons-fileupload:${commonsFileuploadVersion}")
        compile("commons-io:commons-io:${commonsIoVersion}")
        compile("commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}")
        compile("commons-codec:commons-codec:${commonsCodecVersion}")

        // 3rd party
        compile("com.fasterxml.jackson.core:jackson-core")
        compile("com.fasterxml.jackson.core:jackson-annotations")
        compile("com.fasterxml.jackson.core:jackson-databind")
        compile("net.sf.ehcache:ehcache")
        compile("joda-time:joda-time")
        compile("net.sf.ehcache:ehcache")
        compile("joda-time:joda-time")
        compile("com.alibaba:druid:${druidVersion}")
        compile("org.sitemesh:sitemesh:${sitemeshVersion}")
        compile("com.google.guava:guava:${guavaVersion}")
        compile("mysql:mysql-connector-java:${mysqlVersion}")
        compile("redis.clients:jedis:${jedisVersion}")
        compile("org.apache.shiro:shiro-core:${shiroVersion}")
        compile("org.apache.shiro:shiro-spring:${shiroVersion}")
        compile("org.apache.shiro:shiro-web:${shiroVersion}")
        compile("org.apache.shiro:shiro-ehcache:${shiroVersion}") {
            exclude group: 'net.sf.ehcache', module: 'ehcache-core'
        }
        compile("org.hibernate:hibernate-core")

        // javax
        compile("javax.servlet:jstl:${javaxJstlApiVersion}")
        providedCompile("javax.servlet:javax.servlet-api:${javaxServletApiVersion}")
        providedCompile("javax.servlet.jsp:javax.servlet.jsp-api:${javaxJspApiVersion}")

        // tomcat
        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-jasper")

        // test
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}

