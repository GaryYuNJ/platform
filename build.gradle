buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.gradle.api.plugins:gradle-tomcat-plugin:1.2.5")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
        classpath('org.springframework:springloaded:1.2.5.RELEASE')
    }
}

allprojects {
    group = "cn.elvea"

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    ext {
        tomcatVersion = "8.0.30"

        springSessionVersion = "1.0.2.RELEASE"

        sitemeshVersion = "3.0.1"
        guavaVersion = "19.0"
        jodatimeVersion = "2.9.1"
        ehcacheVersion = "2.10.1"
        mysqlVersion = "5.1.38"
        jedisVersion = "2.8.0"
        shiroVersion = "1.2.4"
        druidVersion = "1.0.16"
        mybatisVersion = "3.3.0"
        mybatisSpringVersion = "1.2.3"
        mybatisSpringBootVersion = "1.0.0"

        webjarsJqueryVersion = "2.1.4"
        webjarsBootstrapVersion = "3.3.6"
        webjarsFontAwesomeVersion = "4.5.0"

        javaxJspApiVersion = "2.3.0"

        commonsIoVersion = "2.4"
        commonsLangVersion = "3.4"
        commonsCodecVersion = "1.9"
        commonsFileuploadVersion = "1.3.1"
        commonsBeanutilsVersion = "1.9.2"
    }
}

project("webapp") {
    description = "Platform Webapp"
    version = "0.0.1"

    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: 'spring-boot'
    apply plugin: "war"

    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/main/")
        }
    }

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    springBoot {
        applyExcludeRules = false
    }

    configurations {
        providedRuntime

        compile.exclude module: 'spring-boot-starter-logging'
        compile.exclude module: 'spring-boot-starter-tomcat'
        compile.exclude module: 'commons-logging'
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-log4j2")
        compile("org.springframework.boot:spring-boot-starter-redis")
        compile("org.springframework.session:spring-session:${springSessionVersion}")

        // commons
        compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
        compile("commons-fileupload:commons-fileupload:${commonsFileuploadVersion}")
        compile("commons-io:commons-io:${commonsIoVersion}")
        compile("commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}")
        compile("commons-codec:commons-codec:${commonsCodecVersion}")

        // 3rd party
        compile("com.alibaba:druid:${druidVersion}")
        compile("org.sitemesh:sitemesh:${sitemeshVersion}")
        compile("net.sf.ehcache:ehcache:${ehcacheVersion}")
        compile("joda-time:joda-time:${jodatimeVersion}")
        compile("com.google.guava:guava:${guavaVersion}")
        compile("mysql:mysql-connector-java:${mysqlVersion}")
        compile("redis.clients:jedis:${jedisVersion}")
        compile("org.apache.shiro:shiro-core:${shiroVersion}")
        compile("org.apache.shiro:shiro-spring:${shiroVersion}")
        compile("org.apache.shiro:shiro-web:${shiroVersion}")
        compile("org.apache.shiro:shiro-ehcache:${shiroVersion}") {
            exclude group: 'net.sf.ehcache', module: 'ehcache-core'
        }
        compile("org.mybatis:mybatis:${mybatisVersion}")
        compile("org.mybatis:mybatis-spring:${mybatisSpringVersion}")
        compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootVersion}")

        // webjars
        compile("org.webjars:jquery:${webjarsJqueryVersion}")
        compile("org.webjars:bootstrap:${webjarsBootstrapVersion}")
        compile("org.webjars:font-awesome:${webjarsFontAwesomeVersion}")

        // javax
        compile("javax.servlet:jstl")
        compile("javax.servlet:javax.servlet-api")
        compile("javax.servlet.jsp:javax.servlet.jsp-api:${javaxJspApiVersion}")

        // tomcat
        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat") {
            exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-core'
            exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-el'
            exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-logging-juli'
            exclude group: 'org.apache.tomcat.embed', module: 'tomcat-embed-websocket'
        }
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-jasper")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-el")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-core")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-logging-juli")
        providedRuntime("org.apache.tomcat.embed:tomcat-embed-websocket")
        providedRuntime("org.apache.tomcat:tomcat-jdbc")

        // test
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}
